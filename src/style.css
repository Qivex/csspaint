body {
	margin: 0;
	background-color: #333;
	display: flex;
	flex-direction: column;
}

/* Row of example content */
.demo {
	height: 100px;
	display: flex;
	flex-direction: row;
	align-items: center;
	justify-content: space-around;
	cursor: paint(var(--worklet));
}

/* Content */
.demo > :nth-child(1) {
	width: 70px;
	height: 30px;
	border-inline-width: 50px;
	border-block-width: 30px;
	border-style: solid;
	border-image: paint(var(--worklet)) 30;
}

.demo > :nth-child(2) {
	width: 160px;
	height: 80px;
	border-radius: 40px;
	background-image: paint(var(--worklet));
}

.demo > :nth-child(3) {
	width: 300px;
	height: 100px;
	background-image: paint(var(--worklet));
}

.demo li {
	list-style-image: paint(var(--worklet));
}

/* ANIMATION */
/* Custom @property required for interpolation: stackoverflow.com/q/54594167 */
@property --r {
	syntax: "<number>";
	inherits: false;
	initial-value: 0;
}

@property --g {
	syntax: "<number>";
	inherits: false;
	initial-value: 0;
}

@property --b {
	syntax: "<number>";
	inherits: false;
	initial-value: 0;
}

/* Keyframes */
@keyframes r {
	0%   {--r:   0;}
	100% {--r: 255;}
}

@keyframes g {
	0%   {--g:   0;}
	100% {--g: 255;}
}

@keyframes b {
	0%   {--b:   0;}
	100% {--b: 255;}
}

/* Note: animation is local, the animated props do NOT apply to child elements! (for them the prop still has initial-value) */
body {
	animation: r 1s infinite alternate linear, g 2s infinite alternate linear, b 3s infinite alternate linear;
	/* background-color: rgb(var(--r),var(--g),var(--b)); */
}

.colorful :nth-child(1) {
	animation: r 2s infinite alternate linear;
}

.colorful :nth-child(2) {
	animation: g 2s infinite alternate linear;
}

.colorful :nth-child(3) {
	animation: b 2s infinite alternate linear;
}